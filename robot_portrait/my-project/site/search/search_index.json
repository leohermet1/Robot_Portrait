{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Robot Portrait Group 1 For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#robot-portrait-group-1","text":"For full documentation visit mkdocs.org .","title":"Robot Portrait Group 1"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"GA/","text":"Genetic Algorithm Functions createPop - Create a population taking 9 random faces from the database. crossingOver - Take the 3 first choosen pictures and merge the top of one of them with the bottom of the other one. mutationFunction - Mutate the choosen pictures in a range. completePop - Using the crossed and mutated pictures, generate a new population with if needed pictures from the databse.","title":"GA"},{"location":"GA/#genetic-algorithm","text":"","title":"Genetic Algorithm"},{"location":"GA/#functions","text":"createPop - Create a population taking 9 random faces from the database. crossingOver - Take the 3 first choosen pictures and merge the top of one of them with the bottom of the other one. mutationFunction - Mutate the choosen pictures in a range. completePop - Using the crossed and mutated pictures, generate a new population with if needed pictures from the databse.","title":"Functions"},{"location":"autoencoder/","text":"autoencoder functions get_pictures - Returns a numpy array of the pixels of all the pictures. Takes as parameters: file_str(string) : String of the directory towards the file containing all the celebA pictures creat_train_data - Returns the training part and the testing part of data of the pictures which will be used to train the model after. Takes as parameters: celebA (numpy.array) : Numpy array of the pixels of each picture in the file.","title":"autoencoder"},{"location":"autoencoder/#autoencoder","text":"","title":"autoencoder"},{"location":"autoencoder/#functions","text":"get_pictures - Returns a numpy array of the pixels of all the pictures. Takes as parameters: file_str(string) : String of the directory towards the file containing all the celebA pictures creat_train_data - Returns the training part and the testing part of data of the pictures which will be used to train the model after. Takes as parameters: celebA (numpy.array) : Numpy array of the pixels of each picture in the file.","title":"functions"}]}